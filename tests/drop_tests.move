#[test_only]
module large::drop_tests;

use large::drop as drop;

#[test]
fun test_drop() {
    let sender = @0x9aebe7c326d5deb00a58799edd6d89082839cc9feb6accae584eef1c86ffd167;

    let root = x"c5a2e1b58453fb472402e9e8539358f98e3a1d40a6e91bd8f8392087b0651e9f";
    let proof_bts =
        x"10201fe26ecf78bde5b79a61980e49c6cfef176b30bb9aca2b75b9b85cb14e4ac0a7203c7d09a2d8b5731b11325f98c28c06afa4b1dd912cc30decfd453e7d70b8f32320355375027c5ff0282122c2aa33c321cd1a55c9b95004adb03b763bec941a6ae92049e3cea23870f0d3974fa204644df254dae7ce093862638e3d7c4982949319cd20ebb68239d8daa11245a2d395f4447f04103093d57b3de6282e090532c47f181f20597f37d2e661d45061f88130dcd695bb6636bbb4cb81cfb134cc436324d161d8204cd1eeb03bcfb15742e5a3a5c9e3811211ad571b408fbc453293669c67e35bb7204821f8f16ecdd4d89cdae018e21a6981e43610ed3927a0e71d5ea5307504bbf520d64f04a1b75a392f385d133e685bfdb675f85172850fd3bd3bb5a1b142f6778d202520a588fcab277e0c3f73dcb84a5a118b483b40aa987399c44715c243efa34a203071d21ec7a3c526f04add7d330809894fee9873837773c3763f5f986dec013420af678c9b24bd7f7503762f91e8c2fc4eda1a00544c5886612f6bdccbef8b4bf82010ce24a57b12a503bc7ec898b0447566993fdab6acc3ef78a586d33969369d7520effe4994108121ece05b75342a998589b2f4a0eb7c1460a0d92b7929778cf5cf20dafd4ae95489ce48e1143af5bac1eef94d91e87aa7d5c60320c681d5aebc61c620ea6e4b45ce848ae8ef7c9d12916a86f5fc649522095a10280583a4f9c6d05cdb";

    let mut deserializer = sui::bcs::new(proof_bts);
    let proof = sui::bcs::peel_vec_vec_u8(&mut deserializer);
    let leaf_index = 30255;
    let allocation = 813000000000;

    let res = drop::verify_sender_proof(
        root,
        &proof,
        &sender,
        allocation,
        leaf_index,
    );
    assert!(res);
}
